Line#	| # of execution	| # of execution	| conditional
	| of then branch	| of else branch	| expression
3314	  0			  0			  errnum
3342	  0			  2			  size && !result
3355	  0			  0			  ptr
3359	  0			  0			  size && !result
3643	  3			  0			  !initialized
3647	  3			  0			  (8192) > (getpagesize())
3656	  0			  3			  !buffer
3663	  3			  0			  fstat(fd, &bufstat) < 0 || !((((bufstat.st_mode)) & 61440) == (32768))
3688	  0			  33			  pagesize == 0 && (pagesize = getpagesize()) == 0
3691	  0			  33			  save > bufsalloc
3693	  0			  0			  save > bufsalloc
3697	  0			  0			  !nbuffer
3706	  684			  33			  save--
3715	  0			  33			  bufmapped && bufoffset % pagesize == 0 && bufstat.st_size - bufoffset >= bufalloc - bufsalloc
3721	  0			  0			  maddr == (caddr_t)-1
3742	  0			  33			  bufmapped
3752	  30			  3			  cc > 0
3783	  267029			  1291			  beg < lim
3784	  9648			  257381			  *beg == '\n'
3795	  0			  1399			  out_file
3797	  1281			  118			  out_line
3803	  0			  1399			  out_byte
3806	  0			  1399			  ferror(stdout)
3818	  0			  0			  !lastout
3820	  0			  0			  pending > 0 && lastout < lim
3823	  0			  0			  (nl = memchr(lastout, '\n', lim - lastout)) != 0
3843	  0			  1399			  !out_quiet && pending > 0
3848	  1399			  0			  !out_quiet
3852	  1372			  27			  lastout
3853	  0			  1399			  i < out_before
3854	  0			  0			  p > bp
3855	  0			  0			  p > bp && p[-1] != '\n'
3861	  0			  1399			  (out_before || out_after) && used && p != lastout
3864	  0			  1399			  p < beg
3872	  0			  1399			  nlinesp
3875	  0			  0			  p < lim
3877	  0			  0			  (nl = memchr(p, '\n', lim - p)) != 0
3881	  0			  0			  !out_quiet
3888	  1399			  0			  !out_quiet
3909	  1399			  30			  (b = (*execute)(p, lim - p, &endp)) != 0
3912	  0			  1399			  b == lim && ((b > beg && b[-1] == '\n') || b == beg)
3914	  1399			  0			  !out_invert
3919	  0			  0			  p < b
3926	  0			  30			  out_invert && p < lim
3954	  33			  0			  
3956	  0			  33			  fillbuf(save) < 0
3962	  0			  33			  lastout
3964	  3			  30			  buflim - bufbeg == save
3967	  684			  30			  lim > beg && lim[-1] != '\n'
3970	  30			  0			  beg < lim
3973	  0			  30			  pending
3978	  0			  30			  i < out_before && beg > bufbeg && beg != lastout
3981	  0			  0			  beg > bufbeg && beg[-1] != '\n'
3985	  30			  0			  beg != lastout
3989	  10			  20			  out_line
3992	  0			  3			  residue
3995	  0			  0			  pending
4021	  19			  1			  matchers[i].name
4022	  3			  16			  strcmp(name, matchers[i].name) == 0
4047	  0			  3			  prog && strrchr(prog, '/')
4059	  3			  3			  (opt = getopt(argc, argv, "0123456789A:B:CEFGVX:bce:f:hiLlnqsvwxy")) != (-1)
4063	  0			  0			  '0'
4064	  0			  0			  '1'
4065	  0			  0			  '2'
4066	  0			  0			  '3'
4067	  0			  0			  '4'
4068	  0			  0			  '5'
4069	  0			  0			  '6'
4070	  0			  0			  '7'
4071	  0			  0			  '8'
4072	  0			  0			  '9'
4076	  0			  0			  'A'
4078	  0			  0			  out_after < 0
4081	  0			  0			  'B'
4083	  0			  0			  out_before < 0
4086	  0			  0			  'C'
4089	  2			  0			  'E'
4090	  0			  2			  matcher && strcmp(matcher, "egrep") != 0
4094	  0			  0			  'F'
4095	  0			  0			  matcher && strcmp(matcher, "fgrep") != 0
4099	  0			  0			  'G'
4100	  0			  0			  matcher && strcmp(matcher, "grep") != 0
4104	  0			  0			  'V'
4107	  0			  0			  'X'
4108	  0			  0			  matcher
4112	  0			  0			  'b'
4115	  0			  0			  'c'
4119	  0			  0			  'e'
4122	  0			  0			  keyfound
4128	  0			  0			  'f'
4129	  0			  0			  strcmp(optarg, "-") != 0
4130	  0			  0			  !fp
4132	  0			  0			  keyalloc <= keycc
4136	  0			  0			  keyfound
4138	  0			  0			  !feof(fp) && (cc = fread(keys + keycc, 1, keyalloc - keycc, fp)) > 0
4142	  0			  0			  keycc == keyalloc
4145	  0			  0			  fp != stdin
4148	  0			  0			  keycc - oldcc > 0 && keys[keycc - 1] == '\n'
4152	  0			  0			  'h'
4155	  0			  0			  'i'
4156	  0			  0			  'y'
4159	  0			  0			  'L'
4165	  0			  0			  'l'
4169	  1			  0			  'n'
4172	  0			  0			  'q'
4175	  0			  0			  's'
4178	  0			  0			  'v'
4181	  0			  0			  'w'
4184	  0			  0			  'x'
4187	  0			  0			  "default"
4192	  3			  0			  !keyfound
4193	  3			  0			  optind < argc
4201	  1			  2			  !matcher
4204	  0			  3			  !setmatcher(matcher) && !setmatcher("default")
4209	  0			  3			  argc - optind > 1 && !no_filenames
4214	  3			  0			  optind < argc
4215	  3			  3			  optind < argc
4217	  3			  0			  strcmp(argv[optind], "-")
4218	  0			  3			  desc < 0
4220	  0			  0			  !suppress_errors
4225	  0			  3			  desc == 0
4227	  0			  3			  count_matches
4229	  0			  0			  out_file
4233	  3			  0			  count
4236	  0			  3			  list_files == 1
4239	  0			  0			  list_files == -1
4242	  3			  0			  desc != 0
4250	  0			  0			  count_matches
4252	  0			  0			  count
4255	  0			  0			  list_files == 1
4258	  0			  0			  list_files == -1
4262	  0			  3			  errseen
4273	  0			  3			  done
4278	  78			  3			  c <= 'z'
4281	  78			  3			  c <= 'Z'
4284	  30			  3			  c <= '9'
4808	  0			  3			  compile_stack.stack == ((void *)0)
4832	  3			  0			  bufp->allocated == 0
4834	  0			  3			  bufp->buffer
4844	  0			  3			  !bufp->buffer
4852	  7			  3			  p != pend
4854	  0			  7			  0
4854	  0			  7			  p == pend
4854	  0			  7			  translate
4858	  0			  0			  '^'
4860	  0			  0			  p == pattern + 1 || syntax & ((((1) << 1) << 1) << 1) || at_begline_loc_p(pattern, p, syntax)
4866	  0			  0			  0
4866	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
4866	  0			  0			  0
4866	  0			  0			  bufp->allocated == (1L << 16)
4866	  0			  0			  bufp->allocated > (1L << 16)
4866	  0			  0			  bufp->buffer == ((void *)0)
4866	  0			  0			  old_buffer != bufp->buffer
4866	  0			  0			  fixup_alt_jump
4866	  0			  0			  laststart
4866	  0			  0			  pending_exact
4873	  0			  0			  '$'
4875	  0			  0			  p == pend || syntax & ((((1) << 1) << 1) << 1) || at_endline_loc_p(p, pend, syntax)
4881	  0			  0			  0
4881	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
4881	  0			  0			  0
4881	  0			  0			  bufp->allocated == (1L << 16)
4881	  0			  0			  bufp->allocated > (1L << 16)
4881	  0			  0			  bufp->buffer == ((void *)0)
4881	  0			  0			  old_buffer != bufp->buffer
4881	  0			  0			  fixup_alt_jump
4881	  0			  0			  laststart
4881	  0			  0			  pending_exact
4888	  1			  0			  '+'
4889	  1			  0			  '?'
4890	  0			  1			  (syntax & ((1) << 1)) || (syntax & (((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))
4894	  1			  0			  '*'
4896	  0			  1			  !laststart
4898	  0			  0			  syntax & ((((((1) << 1) << 1) << 1) << 1) << 1)
4900	  0			  0			  !(syntax & (((((1) << 1) << 1) << 1) << 1))
4916	  1			  0			  
4921	  1			  0			  p == pend
4924	  0			  0			  0
4924	  0			  0			  p == pend
4924	  0			  0			  translate
4926	  0			  0			  c == '*' || (!(syntax & ((1) << 1)) && (c == '+' || c == '?'))
4930	  0			  0			  syntax & ((1) << 1) && c == '\\'
4932	  0			  0			  p == pend
4934	  0			  0			  0
4934	  0			  0			  p == pend
4934	  0			  0			  translate
4935	  0			  0			  !(c1 == '+' || c1 == '?')
4955	  0			  1			  !laststart
4960	  1			  0			  many_times_ok
4966	  0			  1			  b - bufp->buffer + (3) > bufp->allocated
4966	  0			  0			  0
4966	  0			  0			  bufp->allocated == (1L << 16)
4966	  0			  0			  bufp->allocated > (1L << 16)
4966	  0			  0			  bufp->buffer == ((void *)0)
4966	  0			  0			  old_buffer != bufp->buffer
4966	  0			  0			  fixup_alt_jump
4966	  0			  0			  laststart
4966	  0			  0			  pending_exact
4973	  0			  1			  (translate ? translate[(unsigned char)(*(p - 2))] : (*(p - 2))) == (translate ? translate[(unsigned char)('.')] : ('.')) && zero_times_ok && p < pend && (translate ? translate[(unsigned char)(*p)] : (*p)) == (translate ? translate[(unsigned char)('\n')] : ('\n')) && !(syntax & (((((((1) << 1) << 1) << 1) << 1) << 1) << 1))
4973	  0			  1			  translate
4973	  0			  1			  translate
4975	  0			  0			  translate
4975	  0			  0			  translate
4991	  0			  1			  b - bufp->buffer + (3) > bufp->allocated
4991	  0			  0			  0
4991	  0			  0			  bufp->allocated == (1L << 16)
4991	  0			  0			  bufp->allocated > (1L << 16)
4991	  0			  0			  bufp->buffer == ((void *)0)
4991	  0			  0			  old_buffer != bufp->buffer
4991	  0			  0			  fixup_alt_jump
4991	  0			  0			  laststart
4991	  0			  0			  pending_exact
4992	  0			  1			  keep_string_p
4998	  1			  0			  !zero_times_ok
5005	  0			  1			  b - bufp->buffer + (3) > bufp->allocated
5005	  0			  0			  0
5005	  0			  0			  bufp->allocated == (1L << 16)
5005	  0			  0			  bufp->allocated > (1L << 16)
5005	  0			  0			  bufp->buffer == ((void *)0)
5005	  0			  0			  old_buffer != bufp->buffer
5005	  0			  0			  fixup_alt_jump
5005	  0			  0			  laststart
5005	  0			  0			  pending_exact
5013	  0			  0			  '.'
5015	  0			  0			  0
5015	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5015	  0			  0			  0
5015	  0			  0			  bufp->allocated == (1L << 16)
5015	  0			  0			  bufp->allocated > (1L << 16)
5015	  0			  0			  bufp->buffer == ((void *)0)
5015	  0			  0			  old_buffer != bufp->buffer
5015	  0			  0			  fixup_alt_jump
5015	  0			  0			  laststart
5015	  0			  0			  pending_exact
5019	  4			  0			  '['
5023	  0			  4			  p == pend
5027	  2			  4			  b - bufp->buffer + (34) > bufp->allocated
5027	  0			  2			  0
5027	  0			  2			  bufp->allocated == (1L << 16)
5027	  0			  2			  bufp->allocated > (1L << 16)
5027	  0			  2			  bufp->buffer == ((void *)0)
5027	  0			  2			  old_buffer != bufp->buffer
5027	  0			  0			  fixup_alt_jump
5027	  0			  0			  laststart
5027	  0			  0			  pending_exact
5033	  0			  4			  0
5033	  0			  4			  b - bufp->buffer + (1) > bufp->allocated
5033	  0			  0			  0
5033	  0			  0			  bufp->allocated == (1L << 16)
5033	  0			  0			  bufp->allocated > (1L << 16)
5033	  0			  0			  bufp->buffer == ((void *)0)
5033	  0			  0			  old_buffer != bufp->buffer
5033	  0			  0			  fixup_alt_jump
5033	  0			  0			  laststart
5033	  0			  0			  pending_exact
5033	  0			  4			  *p == '^'
5034	  0			  4			  *p == '^'
5041	  0			  4			  0
5041	  0			  4			  b - bufp->buffer + (1) > bufp->allocated
5041	  0			  0			  0
5041	  0			  0			  bufp->allocated == (1L << 16)
5041	  0			  0			  bufp->allocated > (1L << 16)
5041	  0			  0			  bufp->buffer == ((void *)0)
5041	  0			  0			  old_buffer != bufp->buffer
5041	  0			  0			  fixup_alt_jump
5041	  0			  0			  laststart
5041	  0			  0			  pending_exact
5047	  0			  4			  (re_opcode_t)b[-2] == charset_not && (syntax & (((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))
5052	  8			  0			  
5054	  0			  8			  p == pend
5056	  0			  8			  0
5056	  0			  8			  p == pend
5056	  0			  8			  translate
5059	  0			  8			  (syntax & (1)) && c == '\\'
5061	  0			  0			  p == pend
5063	  0			  0			  0
5063	  0			  0			  p == pend
5063	  0			  0			  translate
5071	  4			  4			  c == ']' && p != p1 + 1
5076	  0			  4			  had_char_class && c == '-' && *p != ']'
5083	  0			  4			  c == '-' && !(p - 2 >= pattern && p[-2] == '[') && !(p - 3 >= pattern && p[-3] == '[' && p[-2] == '^') && *p != ']'
5090	  0			  0			  ret != REG_NOERROR
5093	  2			  2			  p[0] == '-' && p[1] != ']'
5098	  0			  2			  0
5098	  0			  2			  p == pend
5098	  0			  2			  translate
5101	  0			  2			  ret != REG_NOERROR
5107	  2			  0			  syntax & (((1) << 1) << 1) && c == '[' && *p == ':'
5111	  0			  2			  0
5111	  0			  2			  p == pend
5111	  0			  2			  translate
5115	  0			  2			  p == pend
5117	  12			  0			  
5119	  0			  12			  0
5119	  0			  12			  p == pend
5119	  0			  12			  translate
5120	  2			  10			  c == ':' || c == ']' || p == pend || c1 == 6
5130	  2			  0			  c == ':' && *p == ']'
5146	  0			  2			  !(((strcmp(str, "alpha") == 0)) || ((strcmp(str, "upper") == 0)) || ((strcmp(str, "lower") == 0)) || ((strcmp(str, "digit") == 0)) || ((strcmp(str, "alnum") == 0)) || ((strcmp(str, "xdigit") == 0)) || ((strcmp(str, "space") == 0)) || ((strcmp(str, "print") == 0)) || ((strcmp(str, "punct") == 0)) || ((strcmp(str, "graph") == 0)) || ((strcmp(str, "cntrl") == 0)) || ((strcmp(str, "blank") == 0)))
5150	  0			  2			  0
5150	  0			  2			  p == pend
5150	  0			  2			  translate
5152	  0			  2			  p == pend
5154	  512			  2			  ch < 1 << 8
5156	  62			  450			  (is_alnum && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISalnum))) || (is_alpha && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISalpha))) || (is_blank && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISblank))) || (is_cntrl && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_IScntrl))) || (is_digit && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISdigit))) || (is_graph && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISgraph))) || (is_lower && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISlower))) || (is_print && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISprint))) || (is_punct && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISpunct))) || (is_space && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISspace))) || (is_upper && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISupper))) || (is_xdigit && (1 && ((*__ctype_b_loc())[(int)((ch))] & (unsigned short)_ISxdigit)))
5175	  0			  0			  c1--
5191	  40			  2			  (int)b[-1] > 0 && b[b[-1] - 1] == 0
5198	  0			  0			  '('
5199	  0			  0			  syntax & ((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5205	  0			  0			  ')'
5206	  0			  0			  syntax & ((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5212	  0			  0			  '\n'
5213	  0			  0			  syntax & ((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5219	  0			  0			  '|'
5220	  0			  0			  syntax & ((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5226	  0			  0			  '{'
5227	  0			  0			  syntax & ((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) && syntax & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5233	  0			  0			  '\\'
5234	  0			  0			  p == pend
5239	  0			  0			  0
5239	  0			  0			  p == pend
5243	  0			  0			  '('
5244	  0			  0			  syntax & ((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5251	  0			  0			  (compile_stack.avail == compile_stack.size)
5255	  0			  0			  compile_stack.stack == ((void *)0)
5266	  0			  0			  fixup_alt_jump
5274	  0			  0			  regnum <= 255
5277	  0			  0			  0
5277	  0			  0			  b - bufp->buffer + (3) > bufp->allocated
5277	  0			  0			  0
5277	  0			  0			  bufp->allocated == (1L << 16)
5277	  0			  0			  bufp->allocated > (1L << 16)
5277	  0			  0			  bufp->buffer == ((void *)0)
5277	  0			  0			  old_buffer != bufp->buffer
5277	  0			  0			  fixup_alt_jump
5277	  0			  0			  laststart
5277	  0			  0			  pending_exact
5292	  0			  0			  ')'
5293	  0			  0			  syntax & ((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5295	  0			  0			  (compile_stack.avail == 0)
5296	  0			  0			  syntax & ((((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5302	  0			  0			  fixup_alt_jump
5307	  0			  0			  0
5307	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5307	  0			  0			  0
5307	  0			  0			  bufp->allocated == (1L << 16)
5307	  0			  0			  bufp->allocated > (1L << 16)
5307	  0			  0			  bufp->buffer == ((void *)0)
5307	  0			  0			  old_buffer != bufp->buffer
5307	  0			  0			  fixup_alt_jump
5307	  0			  0			  laststart
5307	  0			  0			  pending_exact
5315	  0			  0			  (compile_stack.avail == 0)
5316	  0			  0			  syntax & ((((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5333	  0			  0			  (compile_stack.stack[compile_stack.avail]).fixup_alt_jump
5345	  0			  0			  this_group_regnum <= 255
5351	  0			  0			  0
5351	  0			  0			  b - bufp->buffer + (3) > bufp->allocated
5351	  0			  0			  0
5351	  0			  0			  bufp->allocated == (1L << 16)
5351	  0			  0			  bufp->allocated > (1L << 16)
5351	  0			  0			  bufp->buffer == ((void *)0)
5351	  0			  0			  old_buffer != bufp->buffer
5351	  0			  0			  fixup_alt_jump
5351	  0			  0			  laststart
5351	  0			  0			  pending_exact
5358	  0			  0			  '|'
5359	  0			  0			  syntax & (((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) || syntax & ((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5362	  0			  0			  syntax & (((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5367	  0			  0			  b - bufp->buffer + (3) > bufp->allocated
5367	  0			  0			  0
5367	  0			  0			  bufp->allocated == (1L << 16)
5367	  0			  0			  bufp->allocated > (1L << 16)
5367	  0			  0			  bufp->buffer == ((void *)0)
5367	  0			  0			  old_buffer != bufp->buffer
5367	  0			  0			  fixup_alt_jump
5367	  0			  0			  laststart
5367	  0			  0			  pending_exact
5372	  0			  0			  fixup_alt_jump
5379	  0			  0			  b - bufp->buffer + (3) > bufp->allocated
5379	  0			  0			  0
5379	  0			  0			  bufp->allocated == (1L << 16)
5379	  0			  0			  bufp->allocated > (1L << 16)
5379	  0			  0			  bufp->buffer == ((void *)0)
5379	  0			  0			  old_buffer != bufp->buffer
5379	  0			  0			  fixup_alt_jump
5379	  0			  0			  laststart
5379	  0			  0			  pending_exact
5387	  0			  0			  '{'
5389	  0			  0			  !(syntax & ((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)) || ((syntax & ((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)) && (syntax & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))) || (p - 2 == pattern && p == pend)
5405	  0			  0			  p == pend
5407	  0			  0			  syntax & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5413	  0			  0			  p != pend
5413	  0			  0			  0
5413	  0			  0			  p == pend
5413	  0			  0			  translate
5413	  0			  0			  (1 && ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISdigit))
5413	  0			  0			  lower_bound < 0
5413	  0			  0			  p == pend
5413	  0			  0			  0
5413	  0			  0			  p == pend
5413	  0			  0			  translate
5415	  0			  0			  c == ','
5417	  0			  0			  p != pend
5417	  0			  0			  0
5417	  0			  0			  p == pend
5417	  0			  0			  translate
5417	  0			  0			  (1 && ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISdigit))
5417	  0			  0			  upper_bound < 0
5417	  0			  0			  p == pend
5417	  0			  0			  0
5417	  0			  0			  p == pend
5417	  0			  0			  translate
5418	  0			  0			  upper_bound < 0
5424	  0			  0			  lower_bound < 0 || upper_bound > ((1 << 15) - 1) || lower_bound > upper_bound
5427	  0			  0			  syntax & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5433	  0			  0			  !(syntax & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))
5435	  0			  0			  c != '\\'
5437	  0			  0			  0
5437	  0			  0			  p == pend
5437	  0			  0			  translate
5440	  0			  0			  c != '}'
5442	  0			  0			  syntax & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5451	  0			  0			  !laststart
5453	  0			  0			  syntax & ((((((1) << 1) << 1) << 1) << 1) << 1)
5455	  0			  0			  syntax & (((((1) << 1) << 1) << 1) << 1)
5464	  0			  0			  upper_bound == 0
5466	  0			  0			  b - bufp->buffer + (3) > bufp->allocated
5466	  0			  0			  0
5466	  0			  0			  bufp->allocated == (1L << 16)
5466	  0			  0			  bufp->allocated > (1L << 16)
5466	  0			  0			  bufp->buffer == ((void *)0)
5466	  0			  0			  old_buffer != bufp->buffer
5466	  0			  0			  fixup_alt_jump
5466	  0			  0			  laststart
5466	  0			  0			  pending_exact
5476	  0			  0			  b - bufp->buffer + (nbytes) > bufp->allocated
5476	  0			  0			  0
5476	  0			  0			  bufp->allocated == (1L << 16)
5476	  0			  0			  bufp->allocated > (1L << 16)
5476	  0			  0			  bufp->buffer == ((void *)0)
5476	  0			  0			  old_buffer != bufp->buffer
5476	  0			  0			  fixup_alt_jump
5476	  0			  0			  laststart
5476	  0			  0			  pending_exact
5495	  0			  0			  upper_bound > 1
5524	  0			  0			  0
5524	  0			  0			  p == pend
5524	  0			  0			  translate
5526	  0			  0			  !(syntax & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))
5528	  0			  0			  p > pattern && p[-1] == '\\'
5533	  0			  0			  'w'
5535	  0			  0			  0
5535	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5535	  0			  0			  0
5535	  0			  0			  bufp->allocated == (1L << 16)
5535	  0			  0			  bufp->allocated > (1L << 16)
5535	  0			  0			  bufp->buffer == ((void *)0)
5535	  0			  0			  old_buffer != bufp->buffer
5535	  0			  0			  fixup_alt_jump
5535	  0			  0			  laststart
5535	  0			  0			  pending_exact
5539	  0			  0			  'W'
5541	  0			  0			  0
5541	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5541	  0			  0			  0
5541	  0			  0			  bufp->allocated == (1L << 16)
5541	  0			  0			  bufp->allocated > (1L << 16)
5541	  0			  0			  bufp->buffer == ((void *)0)
5541	  0			  0			  old_buffer != bufp->buffer
5541	  0			  0			  fixup_alt_jump
5541	  0			  0			  laststart
5541	  0			  0			  pending_exact
5545	  0			  0			  '<'
5546	  0			  0			  0
5546	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5546	  0			  0			  0
5546	  0			  0			  bufp->allocated == (1L << 16)
5546	  0			  0			  bufp->allocated > (1L << 16)
5546	  0			  0			  bufp->buffer == ((void *)0)
5546	  0			  0			  old_buffer != bufp->buffer
5546	  0			  0			  fixup_alt_jump
5546	  0			  0			  laststart
5546	  0			  0			  pending_exact
5549	  0			  0			  '>'
5550	  0			  0			  0
5550	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5550	  0			  0			  0
5550	  0			  0			  bufp->allocated == (1L << 16)
5550	  0			  0			  bufp->allocated > (1L << 16)
5550	  0			  0			  bufp->buffer == ((void *)0)
5550	  0			  0			  old_buffer != bufp->buffer
5550	  0			  0			  fixup_alt_jump
5550	  0			  0			  laststart
5550	  0			  0			  pending_exact
5553	  0			  0			  'b'
5554	  0			  0			  0
5554	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5554	  0			  0			  0
5554	  0			  0			  bufp->allocated == (1L << 16)
5554	  0			  0			  bufp->allocated > (1L << 16)
5554	  0			  0			  bufp->buffer == ((void *)0)
5554	  0			  0			  old_buffer != bufp->buffer
5554	  0			  0			  fixup_alt_jump
5554	  0			  0			  laststart
5554	  0			  0			  pending_exact
5557	  0			  0			  'B'
5558	  0			  0			  0
5558	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5558	  0			  0			  0
5558	  0			  0			  bufp->allocated == (1L << 16)
5558	  0			  0			  bufp->allocated > (1L << 16)
5558	  0			  0			  bufp->buffer == ((void *)0)
5558	  0			  0			  old_buffer != bufp->buffer
5558	  0			  0			  fixup_alt_jump
5558	  0			  0			  laststart
5558	  0			  0			  pending_exact
5561	  0			  0			  '`'
5562	  0			  0			  0
5562	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5562	  0			  0			  0
5562	  0			  0			  bufp->allocated == (1L << 16)
5562	  0			  0			  bufp->allocated > (1L << 16)
5562	  0			  0			  bufp->buffer == ((void *)0)
5562	  0			  0			  old_buffer != bufp->buffer
5562	  0			  0			  fixup_alt_jump
5562	  0			  0			  laststart
5562	  0			  0			  pending_exact
5565	  0			  0			  '\''
5566	  0			  0			  0
5566	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5566	  0			  0			  0
5566	  0			  0			  bufp->allocated == (1L << 16)
5566	  0			  0			  bufp->allocated > (1L << 16)
5566	  0			  0			  bufp->buffer == ((void *)0)
5566	  0			  0			  old_buffer != bufp->buffer
5566	  0			  0			  fixup_alt_jump
5566	  0			  0			  laststart
5566	  0			  0			  pending_exact
5569	  0			  0			  '1'
5569	  0			  0			  '2'
5569	  0			  0			  '3'
5569	  0			  0			  '4'
5569	  0			  0			  '5'
5570	  0			  0			  '6'
5570	  0			  0			  '7'
5570	  0			  0			  '8'
5570	  0			  0			  '9'
5571	  0			  0			  syntax & (((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5576	  0			  0			  c1 > regnum
5580	  0			  0			  group_in_compile_stack(compile_stack, c1)
5584	  0			  0			  0
5584	  0			  0			  b - bufp->buffer + (2) > bufp->allocated
5584	  0			  0			  0
5584	  0			  0			  bufp->allocated == (1L << 16)
5584	  0			  0			  bufp->allocated > (1L << 16)
5584	  0			  0			  bufp->buffer == ((void *)0)
5584	  0			  0			  old_buffer != bufp->buffer
5584	  0			  0			  fixup_alt_jump
5584	  0			  0			  laststart
5584	  0			  0			  pending_exact
5588	  0			  0			  '+'
5589	  0			  0			  '?'
5590	  0			  0			  syntax & ((1) << 1)
5595	  0			  0			  "default"
5600	  0			  0			  translate
5606	  0			  0			  "default"
5610	  0			  0			  !pending_exact || pending_exact + *pending_exact + 1 != b || *pending_exact == (1 << 8) - 1 || *p == '*' || *p == '^' || ((syntax & ((1) << 1)) ? *p == '\\' && (p[1] == '+' || p[1] == '?') : (*p == '+' || *p == '?')) || ((syntax & ((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)) && ((syntax & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)) ? *p == '{' : (p[0] == '\\' && p[1] == '{')))
5620	  0			  0			  (syntax & ((1) << 1))
5624	  0			  0			  (syntax & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))
5632	  0			  0			  0
5632	  0			  0			  b - bufp->buffer + (2) > bufp->allocated
5632	  0			  0			  0
5632	  0			  0			  bufp->allocated == (1L << 16)
5632	  0			  0			  bufp->allocated > (1L << 16)
5632	  0			  0			  bufp->buffer == ((void *)0)
5632	  0			  0			  old_buffer != bufp->buffer
5632	  0			  0			  fixup_alt_jump
5632	  0			  0			  laststart
5632	  0			  0			  pending_exact
5636	  0			  0			  0
5636	  0			  0			  b - bufp->buffer + (1) > bufp->allocated
5636	  0			  0			  0
5636	  0			  0			  bufp->allocated == (1L << 16)
5636	  0			  0			  bufp->allocated > (1L << 16)
5636	  0			  0			  bufp->buffer == ((void *)0)
5636	  0			  0			  old_buffer != bufp->buffer
5636	  0			  0			  fixup_alt_jump
5636	  0			  0			  laststart
5636	  0			  0			  pending_exact
5645	  0			  1			  fixup_alt_jump
5648	  0			  1			  !(compile_stack.avail == 0)
5670	  0			  0			  0
5683	  0			  0			  0
5684	  0			  0			  0
5701	  0			  0			  pfrom != loc
5720	  0			  0			  pfrom != loc
5757	  0			  0			  p + 1 < pend
5761	  0			  0			  syntax & ((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5764	  0			  0			  syntax & ((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5779	  0			  0			  this_element >= 0
5782	  0			  0			  compile_stack.stack[this_element].regnum == regnum
5800	  0			  0			  p == pend
5811	  0			  0			  range_start > range_end
5812	  0			  0			  syntax & (((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
5818	  0			  0			  this_char <= range_end
5820	  0			  0			  translate
5820	  0			  0			  translate
5866	  0			  0			  0
5866	  0			  0			  fail_stack.stack == ((void *)0)
5871	  0			  0			  p != pend || !(fail_stack.avail == 0)
5873	  0			  0			  p == pend
5898	  0			  0			  duplicate
5906	  0			  0			  exactn
5911	  0			  0			  charset
5912	  0			  0			  j >= 0
5913	  0			  0			  p[j / 8] & (1 << (j % 8))
5918	  0			  0			  charset_not
5920	  0			  0			  j < (1 << 8)
5923	  0			  0			  j >= 0
5924	  0			  0			  !(p[j / 8] & (1 << (j % 8)))
5929	  0			  0			  wordchar
5930	  0			  0			  j < (1 << 8)
5931	  0			  0			  re_syntax_table[j] == 1
5936	  0			  0			  notwordchar
5937	  0			  0			  j < (1 << 8)
5938	  0			  0			  re_syntax_table[j] != 1
5943	  0			  0			  anychar
5945	  0			  0			  j < (1 << 8)
5949	  0			  0			  !(bufp->syntax & (((((((1) << 1) << 1) << 1) << 1) << 1) << 1))
5954	  0			  0			  bufp->can_be_null
5960	  0			  0			  no_op
5961	  0			  0			  begline
5962	  0			  0			  endline
5963	  0			  0			  begbuf
5964	  0			  0			  endbuf
5965	  0			  0			  wordbound
5966	  0			  0			  notwordbound
5967	  0			  0			  wordbeg
5968	  0			  0			  wordend
5969	  0			  0			  push_dummy_failure
5973	  0			  0			  jump_n
5974	  0			  0			  pop_failure_jump
5975	  0			  0			  maybe_pop_jump
5976	  0			  0			  jump
5977	  0			  0			  jump_past_alt
5978	  0			  0			  dummy_failure_jump
5979	  0			  0			  0
5979	  0			  0			  0
5981	  0			  0			  j > 0
5989	  0			  0			  (re_opcode_t)*p != on_failure_jump && (re_opcode_t)*p != succeed_n
5994	  0			  0			  0
5994	  0			  0			  0
5998	  0			  0			  !(fail_stack.avail == 0) && fail_stack.stack[fail_stack.avail - 1] == p
6005	  0			  0			  on_failure_jump
6006	  0			  0			  on_failure_keep_string_jump
6008	  0			  0			  0
6008	  0			  0			  0
6010	  0			  0			  p + j < pend
6012	  0			  0			  !(((fail_stack.avail == fail_stack.size) && !((fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4) ? 0 : ((fail_stack).stack = (fail_stack_elt_t *)(destination = (char *)alloca(((fail_stack).size << 1) * sizeof(fail_stack_elt_t)) , memcpy((destination), ((fail_stack).stack), ((fail_stack).size * sizeof(fail_stack_elt_t))) , destination) , (fail_stack).stack == ((void *)0) ? 0 : ((fail_stack).size <<= 1 , 1)))) ? 0 : ((fail_stack).stack[(fail_stack).avail++] = p + j , 1))
6012	  0			  0			  ((fail_stack.avail == fail_stack.size) && !((fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4) ? 0 : ((fail_stack).stack = (fail_stack_elt_t *)(destination = (char *)alloca(((fail_stack).size << 1) * sizeof(fail_stack_elt_t)) , memcpy((destination), ((fail_stack).stack), ((fail_stack).size * sizeof(fail_stack_elt_t))) , destination) , (fail_stack).stack == ((void *)0) ? 0 : ((fail_stack).size <<= 1 , 1))))
6012	  0			  0			  (fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4)
6012	  0			  0			  (fail_stack).stack == ((void *)0)
6018	  0			  0			  succeed_n_p
6020	  0			  0			  0
6020	  0			  0			  0
6027	  0			  0			  succeed_n
6032	  0			  0			  0
6032	  0			  0			  0
6033	  0			  0			  k == 0
6042	  0			  0			  set_number_at
6047	  0			  0			  start_memory
6048	  0			  0			  stop_memory
6053	  0			  0			  "default"
6080	  0			  0			  num_regs
6128	  0			  0			  startpos < 0 || startpos > total_size
6133	  0			  0			  endpos < -1
6135	  0			  0			  endpos > total_size
6140	  0			  0			  bufp->used > 0 && (re_opcode_t)bufp->buffer[0] == begbuf && range > 0
6142	  0			  0			  startpos > 0
6149	  0			  0			  fastmap && !bufp->fastmap_accurate
6150	  0			  0			  re_compile_fastmap(bufp) == -2
6154	  0			  0			  
6160	  0			  0			  fastmap && startpos < total_size && !bufp->can_be_null
6162	  0			  0			  range > 0
6168	  0			  0			  startpos < size1 && startpos + range >= size1
6171	  0			  0			  startpos >= size1
6175	  0			  0			  translate
6176	  0			  0			  range > lim && !fastmap[(unsigned char)translate[(unsigned char)*d++]]
6181	  0			  0			  range > lim && !fastmap[(unsigned char)*d++]
6188	  0			  0			  size1 == 0 || startpos >= size1
6192	  0			  0			  !fastmap[(unsigned char)(translate ? translate[(unsigned char)(c)] : (c))]
6192	  0			  0			  translate
6198	  0			  0			  range >= 0 && startpos == total_size && fastmap && !bufp->can_be_null
6204	  0			  0			  val >= 0
6207	  0			  0			  val == -2
6211	  0			  0			  !range
6213	  0			  0			  range > 0
6334	  0			  0			  0
6334	  0			  0			  fail_stack.stack == ((void *)0)
6341	  0			  0			  bufp->re_nsub
6353	  0			  0			  !(regstart && regend && old_regstart && old_regend && reg_info && best_regstart && best_regend && reg_dummy && reg_info_dummy)
6361	  0			  0			  pos < 0 || pos > size1 + size2
6370	  0			  0			  mcnt < num_regs
6383	  0			  0			  size2 == 0 && string1 != ((void *)0)
6394	  0			  0			  stop <= size1
6411	  0			  0			  size1 > 0 && pos <= size1
6431	  0			  0			  
6435	  0			  0			  p == pend
6441	  0			  0			  d != end_match_2
6445	  0			  0			  !(fail_stack.avail == 0)
6451	  0			  0			  !best_regs_set || (same_str_p && d > match_end) || (!same_str_p && !(dend == end_match_1))
6460	  0			  0			  mcnt < num_regs
6470	  0			  0			  best_regs_set
6481	  0			  0			  (d >= string1 && d <= end1)
6484	  0			  0			  mcnt < num_regs
6495	  0			  0			  regs && !bufp->no_sub
6498	  0			  0			  bufp->regs_allocated == 0
6502	  0			  0			  (30) > (num_regs + 1)
6505	  0			  0			  regs->start == ((void *)0) || regs->end == ((void *)0)
6509	  0			  0			  bufp->regs_allocated == 1
6513	  0			  0			  regs->num_regs < num_regs + 1
6518	  0			  0			  regs->start == ((void *)0) || regs->end == ((void *)0)
6532	  0			  0			  regs->num_regs > 0
6535	  0			  0			  (dend == end_match_1)
6541	  0			  0			  mcnt < ((num_regs) < (regs->num_regs) ? (num_regs) : (regs->num_regs))
6541	  0			  0			  (num_regs) < (regs->num_regs)
6543	  0			  0			  ((regstart[mcnt]) == ((char *)-1)) || ((regend[mcnt]) == ((char *)-1))
6547	  0			  0			  (size1 && string1 <= (regstart[mcnt]) && (regstart[mcnt]) <= string1 + size1)
6548	  0			  0			  (size1 && string1 <= (regend[mcnt]) && (regend[mcnt]) <= string1 + size1)
6557	  0			  0			  mcnt < regs->num_regs
6567	  0			  0			  (dend == end_match_1)
6585	  0			  0			  no_op
6593	  0			  0			  exactn
6599	  0			  0			  translate
6601	  0			  0			  --mcnt
6603	  0			  0			  d == dend
6603	  0			  0			  dend == end_match_2
6604	  0			  0			  translate[(unsigned char)*d++] != (char)*p++
6611	  0			  0			  --mcnt
6613	  0			  0			  d == dend
6613	  0			  0			  dend == end_match_2
6614	  0			  0			  *d++ != (char)*p++
6618	  0			  0			  0
6618	  0			  0			  r <= highest_active_reg
6623	  0			  0			  anychar
6626	  0			  0			  d == dend
6626	  0			  0			  dend == end_match_2
6628	  0			  0			  (!(bufp->syntax & (((((((1) << 1) << 1) << 1) << 1) << 1) << 1)) && (translate ? translate[(unsigned char)(*d)] : (*d)) == '\n') || (bufp->syntax & ((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) && (translate ? translate[(unsigned char)(*d)] : (*d)) == '\x00')
6628	  0			  0			  translate
6629	  0			  0			  translate
6632	  0			  0			  0
6632	  0			  0			  r <= highest_active_reg
6638	  0			  0			  charset
6639	  0			  0			  charset_not
6646	  0			  0			  d == dend
6646	  0			  0			  dend == end_match_2
6647	  0			  0			  translate
6651	  0			  0			  c < (unsigned int)(*p * 8) && p[1 + c / 8] & (1 << (c % 8))
6657	  0			  0			  !not
6659	  0			  0			  0
6659	  0			  0			  r <= highest_active_reg
6670	  0			  0			  start_memory
6676	  0			  0			  ((reg_info[*p]).bits.match_null_string_p) == 3
6685	  0			  0			  ((reg_info[*p]).bits.match_null_string_p)
6686	  0			  0			  ((regstart[*p]) == ((char *)-1))
6702	  0			  0			  lowest_active_reg == ((1 << 8) + 1)
6713	  0			  0			  stop_memory
6721	  0			  0			  ((reg_info[*p]).bits.match_null_string_p)
6722	  0			  0			  ((regend[*p]) == ((char *)-1))
6735	  0			  0			  lowest_active_reg == highest_active_reg
6746	  0			  0			  r > 0 && !((reg_info[r]).bits.is_active)
6749	  0			  0			  r == 0
6763	  0			  0			  (!((reg_info[*p]).bits.matched_something) || (re_opcode_t)p[-3] == start_memory) && (p + 2) < pend
6773	  0			  0			  jump_n
6775	  0			  0			  pop_failure_jump
6776	  0			  0			  maybe_pop_jump
6777	  0			  0			  jump
6778	  0			  0			  dummy_failure_jump
6779	  0			  0			  0
6779	  0			  0			  0
6780	  0			  0			  is_a_jump_n
6784	  0			  0			  "default"
6794	  0			  0			  mcnt < 0 && (re_opcode_t)*p1 == on_failure_jump && (re_opcode_t)p1[3] == start_memory && p1[4] == *p
6798	  0			  0			  ((reg_info[*p]).bits.ever_matched_something)
6805	  0			  0			  r < *p + *(p + 1)
6810	  0			  0			  (int)old_regend[r] >= (int)regstart[r]
6815	  0			  0			  0
6815	  0			  0			  0
6816	  0			  0			  0
6816	  0			  0			  ((fail_stack).size - (fail_stack).avail) < ((highest_active_reg - lowest_active_reg + 1) * 3 + 4)
6816	  0			  0			  !((fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4) ? 0 : ((fail_stack).stack = (fail_stack_elt_t *)(destination = (char *)alloca(((fail_stack).size << 1) * sizeof(fail_stack_elt_t)) , memcpy((destination), ((fail_stack).stack), ((fail_stack).size * sizeof(fail_stack_elt_t))) , destination) , (fail_stack).stack == ((void *)0) ? 0 : ((fail_stack).size <<= 1 , 1)))
6816	  0			  0			  (fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4)
6816	  0			  0			  (fail_stack).stack == ((void *)0)
6816	  0			  0			  this_reg <= highest_active_reg
6829	  0			  0			  duplicate
6836	  0			  0			  ((regstart[regno]) == ((char *)-1)) || ((regend[regno]) == ((char *)-1))
6847	  0			  0			  ((size1 && string1 <= (regstart[regno]) && (regstart[regno]) <= string1 + size1) == (size1 && string1 <= (regend[regno]) && (regend[regno]) <= string1 + size1))
6850	  0			  0			  
6854	  0			  0			  d2 == dend2
6856	  0			  0			  dend2 == end_match_2
6857	  0			  0			  dend2 == regend[regno]
6864	  0			  0			  d2 == dend2
6867	  0			  0			  d == dend
6867	  0			  0			  dend == end_match_2
6874	  0			  0			  mcnt > dend2 - d2
6879	  0			  0			  translate ? bcmp_translate(d, d2, mcnt, translate) : memcmp((d), (d2), (mcnt))
6879	  0			  0			  translate
6892	  0			  0			  begline
6895	  0			  0			  ((d) == (size1 ? string1 : string2) || !size2)
6895	  0			  0			  size1
6897	  0			  0			  !bufp->not_bol
6899	  0			  0			  d[-1] == '\n' && bufp->newline_anchor
6908	  0			  0			  endline
6911	  0			  0			  ((d) == end2)
6913	  0			  0			  !bufp->not_eol
6917	  0			  0			  (d == end1 ? *string2 : *d) == '\n' && bufp->newline_anchor
6917	  0			  0			  d == end1
6926	  0			  0			  begbuf
6928	  0			  0			  ((d) == (size1 ? string1 : string2) || !size2)
6928	  0			  0			  size1
6934	  0			  0			  endbuf
6936	  0			  0			  ((d) == end2)
6940	  0			  0			  on_failure_keep_string_jump
6943	  0			  0			  0
6943	  0			  0			  0
6946	  0			  0			  0
6946	  0			  0			  ((fail_stack).size - (fail_stack).avail) < ((highest_active_reg - lowest_active_reg + 1) * 3 + 4)
6946	  0			  0			  !((fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4) ? 0 : ((fail_stack).stack = (fail_stack_elt_t *)(destination = (char *)alloca(((fail_stack).size << 1) * sizeof(fail_stack_elt_t)) , memcpy((destination), ((fail_stack).stack), ((fail_stack).size * sizeof(fail_stack_elt_t))) , destination) , (fail_stack).stack == ((void *)0) ? 0 : ((fail_stack).size <<= 1 , 1)))
6946	  0			  0			  (fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4)
6946	  0			  0			  (fail_stack).stack == ((void *)0)
6946	  0			  0			  this_reg <= highest_active_reg
6949	  0			  0			  on_failure_jump
6953	  0			  0			  0
6953	  0			  0			  0
6962	  0			  0			  p1 < pend && (re_opcode_t)*p1 == no_op
6965	  0			  0			  p1 < pend && (re_opcode_t)*p1 == start_memory
6972	  0			  0			  lowest_active_reg == ((1 << 8) + 1)
6977	  0			  0			  0
6977	  0			  0			  ((fail_stack).size - (fail_stack).avail) < ((highest_active_reg - lowest_active_reg + 1) * 3 + 4)
6977	  0			  0			  !((fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4) ? 0 : ((fail_stack).stack = (fail_stack_elt_t *)(destination = (char *)alloca(((fail_stack).size << 1) * sizeof(fail_stack_elt_t)) , memcpy((destination), ((fail_stack).stack), ((fail_stack).size * sizeof(fail_stack_elt_t))) , destination) , (fail_stack).stack == ((void *)0) ? 0 : ((fail_stack).size <<= 1 , 1)))
6977	  0			  0			  (fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4)
6977	  0			  0			  (fail_stack).stack == ((void *)0)
6977	  0			  0			  this_reg <= highest_active_reg
6983	  0			  0			  maybe_pop_jump
6984	  0			  0			  0
6984	  0			  0			  0
6989	  0			  0			  p2 + 2 < pend && ((re_opcode_t)*p2 == stop_memory || (re_opcode_t)*p2 == start_memory)
6995	  0			  0			  p2 == pend
7005	  0			  0			  (re_opcode_t)*p2 == exactn || (bufp->newline_anchor && (re_opcode_t)*p2 == endline)
7009	  0			  0			  *p2 == (unsigned char)endline
7015	  0			  0			  (re_opcode_t)p1[3] == exactn && p1[5] != c
7022	  0			  0			  (re_opcode_t)p1[3] == charset || (re_opcode_t)p1[3] == charset_not
7027	  0			  0			  c < (unsigned char)(p1[4] * 8) && p1[5 + c / 8] & (1 << (c % 8))
7033	  0			  0			  !not
7042	  0			  0			  (re_opcode_t)p[-1] != pop_failure_jump
7049	  0			  0			  pop_failure_jump
7061	  0			  0			  string_temp != ((void *)0)
7061	  0			  0			  this_reg >= dummy_low_reg
7069	  0			  0			  jump
7071	  0			  0			  0
7071	  0			  0			  0
7080	  0			  0			  jump_past_alt
7090	  0			  0			  dummy_failure_jump
7094	  0			  0			  0
7094	  0			  0			  ((fail_stack).size - (fail_stack).avail) < ((highest_active_reg - lowest_active_reg + 1) * 3 + 4)
7094	  0			  0			  !((fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4) ? 0 : ((fail_stack).stack = (fail_stack_elt_t *)(destination = (char *)alloca(((fail_stack).size << 1) * sizeof(fail_stack_elt_t)) , memcpy((destination), ((fail_stack).stack), ((fail_stack).size * sizeof(fail_stack_elt_t))) , destination) , (fail_stack).stack == ((void *)0) ? 0 : ((fail_stack).size <<= 1 , 1)))
7094	  0			  0			  (fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4)
7094	  0			  0			  (fail_stack).stack == ((void *)0)
7094	  0			  0			  this_reg <= highest_active_reg
7103	  0			  0			  push_dummy_failure
7107	  0			  0			  0
7107	  0			  0			  ((fail_stack).size - (fail_stack).avail) < ((highest_active_reg - lowest_active_reg + 1) * 3 + 4)
7107	  0			  0			  !((fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4) ? 0 : ((fail_stack).stack = (fail_stack_elt_t *)(destination = (char *)alloca(((fail_stack).size << 1) * sizeof(fail_stack_elt_t)) , memcpy((destination), ((fail_stack).stack), ((fail_stack).size * sizeof(fail_stack_elt_t))) , destination) , (fail_stack).stack == ((void *)0) ? 0 : ((fail_stack).size <<= 1 , 1)))
7107	  0			  0			  (fail_stack).size > re_max_failures * ((num_regs - 1) * 3 + 4)
7107	  0			  0			  (fail_stack).stack == ((void *)0)
7107	  0			  0			  this_reg <= highest_active_reg
7112	  0			  0			  succeed_n
7113	  0			  0			  0
7118	  0			  0			  mcnt > 0
7122	  0			  0			  0
7122	  0			  0			  0
7125	  0			  0			  mcnt == 0
7134	  0			  0			  jump_n
7135	  0			  0			  0
7139	  0			  0			  mcnt
7142	  0			  0			  0
7150	  0			  0			  set_number_at
7154	  0			  0			  0
7154	  0			  0			  0
7156	  0			  0			  0
7156	  0			  0			  0
7158	  0			  0			  0
7162	  0			  0			  wordbound
7164	  0			  0			  (((d) == (size1 ? string1 : string2) || !size2) || ((d) == end2) || (re_syntax_table[(d - 1) == end1 ? *string2 : (d - 1) == string2 - 1 ? *(end1 - 1) : *(d - 1)] == 1) != (re_syntax_table[(d) == end1 ? *string2 : (d) == string2 - 1 ? *(end1 - 1) : *(d)] == 1))
7164	  0			  0			  size1
7164	  0			  0			  (d - 1) == end1
7164	  0			  0			  (d - 1) == string2 - 1
7164	  0			  0			  (d) == end1
7164	  0			  0			  (d) == string2 - 1
7168	  0			  0			  notwordbound
7170	  0			  0			  (((d) == (size1 ? string1 : string2) || !size2) || ((d) == end2) || (re_syntax_table[(d - 1) == end1 ? *string2 : (d - 1) == string2 - 1 ? *(end1 - 1) : *(d - 1)] == 1) != (re_syntax_table[(d) == end1 ? *string2 : (d) == string2 - 1 ? *(end1 - 1) : *(d)] == 1))
7170	  0			  0			  size1
7170	  0			  0			  (d - 1) == end1
7170	  0			  0			  (d - 1) == string2 - 1
7170	  0			  0			  (d) == end1
7170	  0			  0			  (d) == string2 - 1
7174	  0			  0			  wordbeg
7176	  0			  0			  (re_syntax_table[(d) == end1 ? *string2 : (d) == string2 - 1 ? *(end1 - 1) : *(d)] == 1) && (((d) == (size1 ? string1 : string2) || !size2) || !(re_syntax_table[(d - 1) == end1 ? *string2 : (d - 1) == string2 - 1 ? *(end1 - 1) : *(d - 1)] == 1))
7176	  0			  0			  (d) == end1
7176	  0			  0			  (d) == string2 - 1
7176	  0			  0			  size1
7176	  0			  0			  (d - 1) == end1
7176	  0			  0			  (d - 1) == string2 - 1
7180	  0			  0			  wordend
7182	  0			  0			  !((d) == (size1 ? string1 : string2) || !size2) && (re_syntax_table[(d - 1) == end1 ? *string2 : (d - 1) == string2 - 1 ? *(end1 - 1) : *(d - 1)] == 1) && (!(re_syntax_table[(d) == end1 ? *string2 : (d) == string2 - 1 ? *(end1 - 1) : *(d)] == 1) || ((d) == end2))
7182	  0			  0			  size1
7182	  0			  0			  (d - 1) == end1
7182	  0			  0			  (d - 1) == string2 - 1
7183	  0			  0			  (d) == end1
7183	  0			  0			  (d) == string2 - 1
7187	  0			  0			  wordchar
7189	  0			  0			  d == dend
7189	  0			  0			  dend == end_match_2
7190	  0			  0			  !(re_syntax_table[(d) == end1 ? *string2 : (d) == string2 - 1 ? *(end1 - 1) : *(d)] == 1)
7190	  0			  0			  (d) == end1
7190	  0			  0			  (d) == string2 - 1
7192	  0			  0			  0
7192	  0			  0			  r <= highest_active_reg
7196	  0			  0			  notwordchar
7198	  0			  0			  d == dend
7198	  0			  0			  dend == end_match_2
7199	  0			  0			  (re_syntax_table[(d) == end1 ? *string2 : (d) == string2 - 1 ? *(end1 - 1) : *(d)] == 1)
7199	  0			  0			  (d) == end1
7199	  0			  0			  (d) == string2 - 1
7201	  0			  0			  0
7201	  0			  0			  r <= highest_active_reg
7206	  0			  0			  "default"
7214	  0			  0			  !(fail_stack.avail == 0)
7217	  0			  0			  string_temp != ((void *)0)
7217	  0			  0			  this_reg >= lowest_active_reg
7222	  0			  0			  !p
7227	  0			  0			  p < pend
7235	  0			  0			  jump_n
7237	  0			  0			  maybe_pop_jump
7238	  0			  0			  pop_failure_jump
7239	  0			  0			  jump
7241	  0			  0			  0
7241	  0			  0			  0
7244	  0			  0			  (is_a_jump_n && (re_opcode_t)*p1 == succeed_n) || (!is_a_jump_n && (re_opcode_t)*p1 == on_failure_jump)
7249	  0			  0			  "default"
7254	  0			  0			  d >= string1 && d <= end1
7261	  0			  0			  best_regs_set
7278	  0			  0			  p1 < end
7287	  0			  0			  on_failure_jump
7289	  0			  0			  0
7289	  0			  0			  0
7294	  0			  0			  mcnt >= 0
7297	  0			  0			  (re_opcode_t)p1[mcnt - 3] == jump_past_alt
7303	  0			  0			  !alt_match_null_string_p(p1, p1 + mcnt - 3, reg_info)
7313	  0			  0			  (re_opcode_t)*p1 != on_failure_jump
7319	  0			  0			  0
7319	  0			  0			  0
7320	  0			  0			  (re_opcode_t)p1[mcnt - 3] != jump_past_alt
7331	  0			  0			  0
7333	  0			  0			  !alt_match_null_string_p(p1, p1 + mcnt, reg_info)
7341	  0			  0			  stop_memory
7347	  0			  0			  "default"
7348	  0			  0			  !common_op_match_null_string_p(&p1, end, reg_info)
7369	  0			  0			  p1 < end
7377	  0			  0			  on_failure_jump
7379	  0			  0			  0
7379	  0			  0			  0
7383	  0			  0			  "default"
7384	  0			  0			  !common_op_match_null_string_p(&p1, end, reg_info)
7410	  0			  0			  no_op
7411	  0			  0			  begline
7412	  0			  0			  endline
7413	  0			  0			  begbuf
7414	  0			  0			  endbuf
7415	  0			  0			  wordbeg
7416	  0			  0			  wordend
7417	  0			  0			  wordbound
7418	  0			  0			  notwordbound
7426	  0			  0			  start_memory
7434	  0			  0			  ((reg_info[reg_no]).bits.match_null_string_p) == 3
7437	  0			  0			  !ret
7442	  0			  0			  jump
7443	  0			  0			  0
7443	  0			  0			  0
7444	  0			  0			  mcnt >= 0
7450	  0			  0			  succeed_n
7453	  0			  0			  0
7453	  0			  0			  0
7455	  0			  0			  mcnt == 0
7458	  0			  0			  0
7458	  0			  0			  0
7465	  0			  0			  duplicate
7466	  0			  0			  !((reg_info[*p1]).bits.match_null_string_p)
7470	  0			  0			  set_number_at
7473	  0			  0			  "default"
7493	  0			  0			  len
7495	  0			  0			  translate[*p1++] != translate[*p2++]
7534	  0			  0			  (cflags & 1)
7548	  0			  0			  cflags & (1 << 1)
7553	  0			  0			  preg->translate == ((void *)0)
7557	  0			  0			  i < 256
7558	  0			  0			  (1 && ((*__ctype_b_loc())[(int)((i))] & (unsigned short)_ISupper))
7564	  0			  0			  cflags & ((1 << 1) << 1)
7582	  0			  0			  ret == REG_ERPAREN
7611	  0			  0			  want_reg_info
7616	  0			  0			  regs.start == ((void *)0) || regs.end == ((void *)0)
7623	  0			  0			  want_reg_info
7626	  0			  0			  want_reg_info
7628	  0			  0			  ret >= 0
7632	  0			  0			  r < nmatch
7645	  0			  0			  ret >= 0
7662	  0			  0			  errcode < 0 || errcode >= (sizeof (re_error_msg) / sizeof (re_error_msg[0]))
7674	  0			  0			  !msg
7679	  0			  0			  errbuf_size != 0
7681	  0			  0			  msg_size > errbuf_size
7700	  0			  0			  preg->buffer != ((void *)0)
7707	  0			  0			  preg->fastmap != ((void *)0)
7712	  0			  0			  preg->translate != ((void *)0)
7956	  0			  3			  !r
7968	  0			  37			  !r
7981	  0			  14			  !r
8017	  80			  10			  i < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
8027	  72			  9			  i < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
8037	  0			  0			  i < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
8048	  2			  0			  i < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
8049	  1			  1			  s1[i] != s2[i]
8064	  1			  2			  i < dfa->cindex
8065	  0			  1			  equal(s, dfa->charclasses[i])
8067	  1			  1			  (dfa->cindex) >= (dfa->calloc)
8067	  1			  1			  (dfa->cindex) >= (dfa->calloc)
8144	  0			  5			  lexleft < len
8163	  3			  0			  i < 2
8165	  1			  2			  !lexleft
8165	  0			  1			  0 != 0
8168	  0			  0			  '\\'
8169	  0			  0			  backslash
8171	  0			  0			  lexleft == 0
8176	  0			  0			  '^'
8177	  0			  0			  backslash
8179	  0			  0			  syntax_bits & ((((1) << 1) << 1) << 1) || lasttok == END || lasttok == LPAREN || lasttok == OR
8186	  0			  0			  '$'
8187	  0			  0			  backslash
8189	  0			  0			  syntax_bits & ((((1) << 1) << 1) << 1) || lexleft == 0 || (syntax_bits & ((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) ? lexleft > 0 && *lexptr == ')' : lexleft > 1 && lexptr[0] == '\\' && lexptr[1] == ')') || (syntax_bits & ((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) ? lexleft > 0 && *lexptr == '|' : lexleft > 1 && lexptr[0] == '\\' && lexptr[1] == '|') || ((syntax_bits & ((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)) && lexleft > 0 && *lexptr == '\n')
8191	  0			  0			  syntax_bits & ((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
8194	  0			  0			  syntax_bits & ((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
8202	  0			  0			  '1'
8203	  0			  0			  '2'
8204	  0			  0			  '3'
8205	  0			  0			  '4'
8206	  0			  0			  '5'
8207	  0			  0			  '6'
8208	  0			  0			  '7'
8209	  0			  0			  '8'
8210	  0			  0			  '9'
8211	  0			  0			  backslash && !(syntax_bits & (((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))
8218	  0			  0			  '<'
8219	  0			  0			  backslash
8223	  0			  0			  '>'
8224	  0			  0			  backslash
8228	  0			  0			  'b'
8229	  0			  0			  backslash
8233	  0			  0			  'B'
8234	  0			  0			  backslash
8238	  0			  0			  '?'
8239	  0			  0			  syntax_bits & (((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
8241	  0			  0			  backslash != ((syntax_bits & ((1) << 1)) != 0)
8243	  0			  0			  !(syntax_bits & (((((1) << 1) << 1) << 1) << 1)) && laststart
8247	  0			  0			  '*'
8248	  0			  0			  backslash
8250	  0			  0			  !(syntax_bits & (((((1) << 1) << 1) << 1) << 1)) && laststart
8254	  0			  0			  '+'
8255	  0			  0			  syntax_bits & (((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
8257	  0			  0			  backslash != ((syntax_bits & ((1) << 1)) != 0)
8259	  0			  0			  !(syntax_bits & (((((1) << 1) << 1) << 1) << 1)) && laststart
8263	  0			  0			  '{'
8264	  0			  0			  !(syntax_bits & ((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))
8266	  0			  0			  backslash != ((syntax_bits & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)) == 0)
8274	  0			  0			  !lexleft
8274	  0			  0			  "unfinished repeat count" != 0
8275	  0			  0			  (1 && ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISdigit))
8278	  0			  0			  
8280	  0			  0			  !lexleft
8280	  0			  0			  "unfinished repeat count" != 0
8281	  0			  0			  !(1 && ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISdigit))
8286	  0			  0			  c != ','
8288	  0			  0			  c == ','
8289	  0			  0			  
8291	  0			  0			  !lexleft
8291	  0			  0			  "unfinished repeat count" != 0
8292	  0			  0			  !(1 && ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISdigit))
8298	  0			  0			  !(syntax_bits & (((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))
8300	  0			  0			  c != '\\'
8302	  0			  0			  !lexleft
8302	  0			  0			  "unfinished repeat count" != 0
8304	  0			  0			  c != '}'
8309	  0			  0			  '|'
8310	  0			  0			  syntax_bits & (((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
8312	  0			  0			  backslash != ((syntax_bits & ((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)) == 0)
8317	  0			  0			  '\n'
8318	  0			  0			  syntax_bits & (((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) || backslash || !(syntax_bits & ((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1))
8325	  0			  0			  '('
8326	  0			  0			  backslash != ((syntax_bits & ((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)) == 0)
8332	  0			  0			  ')'
8333	  0			  0			  backslash != ((syntax_bits & ((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)) == 0)
8335	  0			  0			  parens == 0 && syntax_bits & ((((((((((((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
8341	  0			  0			  '.'
8342	  0			  0			  backslash
8346	  0			  0			  !(syntax_bits & (((((((1) << 1) << 1) << 1) << 1) << 1) << 1))
8348	  0			  0			  syntax_bits & ((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
8353	  0			  0			  'w'
8354	  0			  0			  'W'
8355	  0			  0			  !backslash
8358	  0			  0			  c2 < (1 << 8)
8359	  0			  0			  (1 && ((*__ctype_b_loc())[(int)((c2))] & (unsigned short)_ISalnum))
8361	  0			  0			  c == 'W'
8366	  2			  0			  '['
8367	  0			  2			  backslash
8370	  0			  2			  !lexleft
8370	  0			  0			  "Unbalanced [" != 0
8371	  0			  2			  c == '^'
8373	  0			  0			  !lexleft
8373	  0			  0			  "Unbalanced [" != 0
8378	  0			  2			  (c = c1) != ']'
8386	  2			  0			  c == '[' && (syntax_bits & (((1) << 1) << 1))
8387	  5			  0			  prednames[c1].name
8388	  2			  3			  looking_at(prednames[c1].name)
8390	  512			  2			  c2 < (1 << 8)
8391	  62			  450			  (*prednames[c1].pred)(c2)
8395	  0			  2			  !lexleft
8395	  0			  0			  "Unbalanced [" != 0
8398	  0			  0			  c == '\\' && (syntax_bits & (1))
8399	  0			  0			  !lexleft
8399	  0			  0			  "Unbalanced [" != 0
8400	  0			  0			  !lexleft
8400	  0			  0			  "Unbalanced [" != 0
8401	  0			  0			  c1 == '-'
8403	  0			  0			  !lexleft
8403	  0			  0			  "Unbalanced [" != 0
8404	  0			  0			  c2 == ']'
8414	  0			  0			  c2 == '\\' && (syntax_bits & (1))
8416	  0			  0			  !lexleft
8416	  0			  0			  "Unbalanced [" != 0
8417	  0			  0			  !lexleft
8417	  0			  0			  "Unbalanced [" != 0
8422	  0			  0			  c <= c2
8425	  0			  0			  case_fold
8426	  0			  0			  (1 && ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISupper))
8428	  0			  0			  (1 && ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISlower))
8436	  0			  2			  invert
8439	  0			  0			  syntax_bits & (((((((((1) << 1) << 1) << 1) << 1) << 1) << 1) << 1) << 1)
8445	  0			  0			  "default"
8448	  0			  0			  case_fold && (1 && ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISalpha))
8452	  0			  0			  ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISupper)
8482	  3			  2			  (dfa->tindex) >= (dfa->talloc)
8482	  3			  3			  (dfa->tindex) >= (dfa->talloc)
8487	  0			  0			  QMARK
8488	  0			  0			  STAR
8489	  0			  0			  PLUS
8492	  2			  0			  CAT
8493	  2			  0			  OR
8494	  2			  0			  ORTOP
8498	  3			  0			  "default"
8500	  3			  0			  EMPTY
8504	  2			  3			  depth > dfa->depth
8516	  2			  0			  (tok >= 0 && tok < (1 << 8)) || tok >= CSET || tok == BACKREF || tok == BEGLINE || tok == ENDLINE || tok == BEGWORD || tok == ENDWORD || tok == LIMWORD || tok == NOTLIMWORD
8523	  0			  0			  tok == LPAREN
8527	  0			  0			  tok != RPAREN
8543	  0			  0			  "default"
8545	  0			  0			  QMARK
8546	  0			  0			  STAR
8547	  0			  0			  PLUS
8549	  0			  0			  CAT
8550	  0			  0			  OR
8551	  0			  0			  ORTOP
8564	  0			  0			  i < ntokens
8574	  0			  2			  tok == QMARK || tok == STAR || tok == PLUS || tok == REPMN
8575	  0			  0			  tok == REPMN
8579	  0			  0			  maxrep == 0
8581	  0			  0			  minrep == 0
8583	  0			  0			  i < minrep
8588	  0			  0			  i < maxrep
8607	  1			  1			  tok != RPAREN && tok != OR && tok >= 0
8619	  0			  1			  tok == OR
8623	  0			  0			  toplevel
8647	  0			  1			  !syntax_bits_set
8655	  0			  1			  tok != END
8661	  0			  1			  d->nregexps
8677	  14			  14			  i < src->nelem
8694	  4			  9			  i < s->nelem && p.strchr < s->elems[i].strchr
8696	  0			  9			  i < s->nelem && p.strchr == s->elems[i].strchr
8702	  9			  9			  i < s->nelem
8722	  0			  2			  i < s1->nelem && j < s2->nelem
8723	  0			  0			  s1->elems[i].strchr > s2->elems[j].strchr
8725	  0			  0			  s1->elems[i].strchr < s2->elems[j].strchr
8732	  2			  2			  i < s1->nelem
8734	  0			  2			  j < s2->nelem
8746	  0			  0			  i < s->nelem
8747	  0			  0			  p.strchr == s->elems[i].strchr
8749	  0			  0			  i < s->nelem
8750	  0			  0			  i < s->nelem
8769	  0			  8			  newline
8770	  0			  8			  letter
8772	  12			  8			  i < s->nelem
8776	  10			  3			  i < d->sindex
8778	  5			  5			  hash != d->states[i].hash || s->nelem != d->states[i].elems.nelem || newline != d->states[i].newline || letter != d->states[i].letter
8781	  7			  5			  j < s->nelem
8782	  0			  7			  s->elems[j].constraint != d->states[i].elems.elems[j].constraint || s->elems[j].strchr != d->states[i].elems.elems[j].strchr
8786	  5			  0			  j == s->nelem
8791	  2			  1			  (d->sindex) >= (d->salloc)
8791	  2			  2			  (d->sindex) >= (d->salloc)
8800	  5			  3			  j < s->nelem
8801	  1			  4			  d->tokens[s->elems[j].strchr] < 0
8804	  1			  0			  (((constraint) & 1 << (((newline) ? 2 : 0) + ((0) ? 1 : 0) + 4)) && ((constraint) & 1 << (((letter) ? 2 : 0) + ((0) ? 1 : 0)))) || (((constraint) & 1 << (((newline) ? 2 : 0) + ((0) ? 1 : 0) + 4)) && ((constraint) & 1 << (((letter) ? 2 : 0) + ((1) ? 1 : 0)))) || (((constraint) & 1 << (((newline) ? 2 : 0) + ((1) ? 1 : 0) + 4)) && ((constraint) & 1 << (((letter) ? 2 : 0) + ((0) ? 1 : 0)))) || (((constraint) & 1 << (((newline) ? 2 : 0) + ((1) ? 1 : 0) + 4)) && ((constraint) & 1 << (((letter) ? 2 : 0) + ((1) ? 1 : 0))))
8804	  0			  1			  (newline)
8804	  0			  1			  (0)
8804	  0			  1			  (letter)
8804	  0			  1			  (0)
8805	  0			  0			  (newline)
8805	  0			  0			  (0)
8805	  0			  0			  (letter)
8805	  0			  0			  (1)
8806	  0			  0			  (newline)
8806	  0			  0			  (1)
8806	  0			  0			  (letter)
8806	  0			  0			  (0)
8807	  0			  0			  (newline)
8807	  0			  0			  (1)
8807	  0			  0			  (letter)
8807	  0			  0			  (1)
8809	  1			  0			  !d->states[i].first_end
8812	  0			  4			  d->tokens[s->elems[j].strchr] == BACKREF
8838	  20			  4			  i < d->tindex
8841	  3			  4			  i < s->nelem
8842	  0			  3			  d->tokens[s->elems[i].strchr] >= (1 << 8) && d->tokens[s->elems[i].strchr] != BACKREF && d->tokens[s->elems[i].strchr] < CSET
8849	  0			  0			  visited[old.strchr]
8857	  0			  0			  BEGLINE
8860	  0			  0			  ENDLINE
8863	  0			  0			  BEGWORD
8866	  0			  0			  ENDWORD
8869	  0			  0			  LIMWORD
8872	  0			  0			  NOTLIMWORD
8875	  0			  0			  "default"
8878	  0			  0			  j < d->follows[old.strchr].nelem
8923	  5			  1			  i < d->tindex
8929	  5			  1			  i < d->tindex
8935	  0			  0			  EMPTY
8943	  0			  0			  STAR
8944	  0			  0			  PLUS
8950	  0			  0			  j < nlastpos[-1]
8953	  0			  0			  (merged.nelem - 1) >= (nalloc[pos[j].strchr])
8953	  0			  0			  (merged.nelem - 1) >= (nalloc[pos[j].strchr])
8958	  0			  0			  QMARK
8960	  0			  0			  d->tokens[i] != PLUS
8964	  2			  0			  CAT
8970	  2			  2			  j < nlastpos[-2]
8973	  0			  2			  (merged.nelem - 1) >= (nalloc[pos[j].strchr])
8973	  0			  0			  (merged.nelem - 1) >= (nalloc[pos[j].strchr])
8980	  0			  2			  nullable[-2]
8988	  0			  2			  nullable[-1]
8993	  2			  2			  j >= 0
9005	  0			  0			  OR
9006	  0			  0			  ORTOP
9020	  3			  0			  "default"
9040	  5			  1			  i < d->tindex
9041	  3			  2			  d->tokens[i] < (1 << 8) || d->tokens[i] == BACKREF || d->tokens[i] >= CSET
9047	  0			  3			  d->follows[i].nelem < merged.nelem
9055	  1			  1			  i < nfirstpos[-1]
9061	  1			  1			  i < merged.nelem
9062	  0			  1			  (((merged.elems[i].constraint) & 192) >> 2 != ((merged.elems[i].constraint) & 48))
9109	  1			  2			  !initialized
9112	  256			  1			  i < (1 << 8)
9113	  62			  194			  (1 && ((*__ctype_b_loc())[(int)((i))] & (unsigned short)_ISalnum))
9120	  5			  3			  i < d->states[s].elems.nelem
9123	  0			  5			  d->tokens[pos.strchr] >= 0 && d->tokens[pos.strchr] < (1 << 8)
9125	  4			  1			  d->tokens[pos.strchr] >= CSET
9132	  0			  4			  pos.constraint != 255
9134	  0			  0			  !((pos.constraint) & 1 << (((d->states[s].newline) ? 2 : 0) + ((1) ? 1 : 0) + 4))
9134	  0			  0			  (d->states[s].newline)
9134	  0			  0			  (1)
9137	  0			  0			  !((pos.constraint) & 1 << (((d->states[s].newline) ? 2 : 0) + ((0) ? 1 : 0) + 4))
9137	  0			  0			  (d->states[s].newline)
9137	  0			  0			  (0)
9139	  0			  0			  j < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
9141	  0			  0			  !((pos.constraint) & 1 << (((d->states[s].letter) ? 2 : 0) + ((1) ? 1 : 0)))
9141	  0			  0			  (d->states[s].letter)
9141	  0			  0			  (1)
9143	  0			  0			  j < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
9145	  0			  0			  !((pos.constraint) & 1 << (((d->states[s].letter) ? 2 : 0) + ((0) ? 1 : 0)))
9145	  0			  0			  (d->states[s].letter)
9145	  0			  0			  (0)
9147	  0			  0			  j < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
9151	  0			  0			  j < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int))) && !matches[j]
9153	  0			  0			  j == (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
9157	  1			  4			  j < ngrps
9162	  0			  1			  d->tokens[pos.strchr] >= 0 && d->tokens[pos.strchr] < (1 << 8) && !tstbit(d->tokens[pos.strchr], labels[j])
9169	  8			  1			  k < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
9170	  0			  8			  (intersect[k] = matches[k] & labels[j][k])
9171	  1			  0			  !intersectf
9176	  0			  0			  k < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
9181	  0			  0			  (leftovers[k] = ~match & label)
9182	  0			  0			  (matches[k] = match & ~label)
9186	  0			  0			  leftoversf
9201	  0			  0			  !matchesf
9207	  4			  0			  j == ngrps
9224	  3			  0			  d->searchflag
9228	  3			  3			  i < d->states[0].elems.nelem
9230	  0			  3			  (((d->states[0].elems.elems[i].constraint) & 192) >> 2 != ((d->states[0].elems.elems[i].constraint) & 48))
9232	  0			  3			  (((d->states[0].elems.elems[i].constraint) & 12) >> 2 != ((d->states[0].elems.elems[i].constraint) & 3))
9237	  0			  3			  wants_newline
9241	  0			  3			  wants_letter
9245	  768			  3			  i < (1 << 8)
9246	  3			  765			  i == '\n'
9248	  186			  579			  (1 && ((*__ctype_b_loc())[(int)((i))] & (unsigned short)_ISalnum))
9254	  0			  0			  i < (1 << 8)
9257	  4			  3			  i < ngrps
9263	  4			  4			  j < grps[i].nelem
9264	  4			  4			  k < d->follows[grps[i].elems[j].strchr].nelem
9269	  4			  0			  d->searchflag
9270	  4			  4			  j < d->states[0].elems.nelem
9275	  0			  4			  tstbit('\n', labels[i])
9276	  0			  0			  j < follows.nelem
9277	  0			  0			  (((follows.elems[j].constraint) & 192) >> 2 != ((follows.elems[j].constraint) & 48))
9281	  9			  0			  j < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
9282	  4			  5			  labels[i][j] & letters[j]
9284	  4			  0			  j < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
9285	  8			  4			  j < follows.nelem
9286	  0			  8			  (((follows.elems[j].constraint) & 12) >> 2 != ((follows.elems[j].constraint) & 3))
9291	  0			  4			  wants_newline
9295	  0			  4			  wants_letter
9301	  32			  4			  j < (((1 << 8) + (8 * sizeof(int)) - 1) / (8 * sizeof(int)))
9302	  1024			  32			  k < (8 * sizeof(int))
9303	  82			  942			  labels[i][j] & 1 << k
9307	  0			  82			  c == '\n'
9309	  82			  0			  (1 && ((*__ctype_b_loc())[(int)((c))] & (unsigned short)_ISalnum))
9311	  0			  0			  c < (1 << 8)
9316	  4			  3			  i < ngrps
9334	  0			  3			  d->trcount >= 1024
9336	  0			  0			  i < d->tralloc
9337	  0			  0			  d->trans[i]
9342	  0			  0			  d->fails[i]
9354	  1			  2			  ((((*d).states[s].constraint) & 1 << (((d->states[s].newline) ? 2 : 0) + ((1) ? 1 : 0) + 4)) && (((*d).states[s].constraint) & 1 << (((d->states[s].letter) ? 2 : 0) + ((0) ? 1 : 0))))
9354	  0			  3			  (d->states[s].newline)
9354	  3			  0			  (1)
9354	  0			  1			  (d->states[s].letter)
9354	  0			  1			  (0)
9357	  1			  2			  ((((*d).states[s].constraint) & 1 << (((d->states[s].newline) ? 2 : 0) + ((0) ? 1 : 0) + 4)) && (((*d).states[s].constraint) & 1 << (((d->states[s].letter) ? 2 : 0) + ((1) ? 1 : 0))))
9357	  0			  3			  (d->states[s].newline)
9357	  0			  3			  (0)
9357	  0			  1			  (d->states[s].letter)
9357	  1			  0			  (1)
9360	  1			  2			  ((((*d).states[s].constraint) & 1 << (((d->states[s].newline) ? 2 : 0) + ((0) ? 1 : 0) + 4)) && (((*d).states[s].constraint) & 1 << (((d->states[s].letter) ? 2 : 0) + ((0) ? 1 : 0))))
9360	  0			  3			  (d->states[s].newline)
9360	  0			  3			  (0)
9360	  0			  1			  (d->states[s].letter)
9360	  0			  1			  (0)
9370	  768			  3			  i < (1 << 8)
9371	  2			  766			  trans[i] >= d->tralloc
9375	  2			  2			  trans[i] >= d->tralloc
9382	  3			  2			  oldalloc < d->tralloc
9394	  1			  2			  ((*d).states[s].constraint)
9430	  1			  39			  !sbit_init
9435	  256			  1			  i < (1 << 8)
9436	  1			  255			  i == '\n'
9438	  62			  193			  (1 && ((*__ctype_b_loc())[(int)((i))] & (unsigned short)_ISalnum))
9444	  1			  39			  !d->tralloc
9452	  10941			  0			  
9455	  10940			  1			  (t = trans[s]) != 0
9456	  148732			  4940			  (t = trans[s]) != 0
9459	  6000			  153672			  !(t = trans[s1])
9469	  30			  10911			  s >= 0 && p <= (unsigned char *)end && d->fails[s]
9471	  30			  0			  d->success[s] & sbit[*p]
9473	  30			  0			  backref
9474	  0			  30			  d->states[s].backref
9487	  0			  10911			  count && (char *)p <= end && p[-1] == '\n'
9491	  10			  10901			  (char *)p > end
9494	  2			  10899			  s >= 0
9501	  0			  10899			  p[-1] == '\n' && newline
9539	  0			  1			  case_fold
9545	  0			  0			  !copy
9550	  0			  0			  i < len
9551	  0			  0			  (1 && ((*__ctype_b_loc())[(int)((s[i]))] & (unsigned short)_ISupper))
9584	  0			  0			  i < d->sindex
9587	  0			  0			  i < d->tindex
9588	  0			  0			  d->follows[i].elems
9591	  0			  0			  i < d->tralloc
9592	  0			  0			  d->trans[i]
9594	  0			  0			  d->fails[i]
9599	  0			  0			  dm
9615	  0			  1			  (new == ((void *)0))
9616	  0			  1			  old == ((void *)0)
9618	  1			  0			  newsize == 0
9621	  0			  0			  old == ((void *)0)
9625	  0			  0			  result != ((void *)0) && new != ((void *)0)
9646	  0			  0			  *cp != '\x00'
9647	  0			  0			  strncmp(cp, lookfor, len) == 0
9656	  24			  0			  cp != ((void *)0)
9666	  0			  8			  cpp == ((void *)0)
9668	  0			  8			  cpp[i] != ((void *)0)
9683	  0			  0			  cpp == ((void *)0)
9685	  0			  0			  (new = icpyalloc(new)) == ((void *)0)
9692	  0			  0			  cpp[i] != ((void *)0)
9693	  0			  0			  istrstr(cpp[i], new) != ((void *)0)
9700	  0			  0			  cpp[j] != ((void *)0)
9701	  0			  0			  istrstr(new, cpp[j]) == ((void *)0)
9706	  0			  0			  --i == j
9713	  0			  0			  cpp == ((void *)0)
9733	  0			  0			  left == ((void *)0) || right == ((void *)0)
9736	  0			  0			  cpp == ((void *)0)
9739	  0			  0			  *lcp != '\x00'
9743	  0			  0			  rcp != ((void *)0)
9745	  0			  0			  lcp[i] != '\x00' && lcp[i] == rcp[i]
9747	  0			  0			  i > len
9751	  0			  0			  len == 0
9753	  0			  0			  (cpp = enlist(cpp, lcp, len)) == ((void *)0)
9766	  0			  1			  old == ((void *)0) || new == ((void *)0)
9768	  0			  1			  new[i] != ((void *)0)
9771	  0			  0			  old == ((void *)0)
9788	  0			  0			  left == ((void *)0) || right == ((void *)0)
9791	  0			  0			  both == ((void *)0)
9794	  0			  0			  left[lnum] != ((void *)0)
9796	  0			  0			  right[rnum] != ((void *)0)
9799	  0			  0			  temp == ((void *)0)
9806	  0			  0			  both == ((void *)0)
9846	  0			  1			  musts == ((void *)0)
9849	  6			  1			  i <= dfa->tindex
9851	  6			  1			  i <= dfa->tindex
9857	  0			  6			  mp[i].in == ((void *)0) || mp[i].left == ((void *)0) || mp[i].right == ((void *)0) || mp[i].is == ((void *)0)
9864	  4			  0			  ri < dfa->tindex
9868	  0			  0			  LPAREN
9869	  0			  0			  RPAREN
9871	  0			  0			  EMPTY
9872	  0			  0			  BEGLINE
9873	  0			  0			  ENDLINE
9874	  0			  0			  BEGWORD
9875	  0			  0			  ENDWORD
9876	  0			  0			  LIMWORD
9877	  0			  0			  NOTLIMWORD
9878	  0			  0			  BACKREF
9881	  0			  0			  STAR
9882	  0			  0			  QMARK
9883	  0			  0			  mp <= musts
9888	  0			  0			  OR
9889	  0			  0			  ORTOP
9890	  0			  0			  mp < &musts[2]
9901	  0			  0			  strcmp(lmp->is, rmp->is) != 0
9905	  0			  0			  lmp->left[i] != '\x00' && lmp->left[i] == rmp->left[i]
9912	  0			  0			  n > rn
9914	  0			  0			  i < n
9915	  0			  0			  lmp->right[ln - i - 1] != rmp->right[rn - i - 1]
9917	  0			  0			  j < i
9921	  0			  0			  new == ((void *)0)
9928	  0			  0			  PLUS
9929	  0			  0			  mp <= musts
9934	  1			  0			  END
9935	  0			  1			  mp != &musts[1]
9937	  0			  1			  musts[0].in[i] != ((void *)0)
9938	  0			  0			  strlen(musts[0].in[i]) > strlen(result)
9940	  1			  0			  strcmp(result, musts[0].is) == 0
9943	  1			  0			  CAT
9944	  0			  1			  mp < &musts[2]
9956	  0			  1			  lmp->in == ((void *)0)
9958	  0			  1			  lmp->right[0] != '\x00' && rmp->left[0] != '\x00'
9964	  0			  0			  tp == ((void *)0)
9967	  0			  0			  tp == ((void *)0)
9972	  0			  0			  lmp->in == ((void *)0)
9976	  0			  1			  lmp->is[0] != '\x00'
9980	  0			  0			  lmp->left == ((void *)0)
9984	  1			  0			  rmp->is[0] == '\x00'
9987	  0			  1			  lmp->right == ((void *)0)
9990	  0			  1			  lmp->is[0] != '\x00' && rmp->is[0] != '\x00'
9993	  0			  0			  lmp->is == ((void *)0)
10000	  2			  0			  "default"
10001	  0			  2			  t < END
10006	  0			  2			  t == '\x00'
10011	  2			  0			  t >= CSET
10023	  0			  0			  mp->in == ((void *)0)
10032	  0			  1			  strlen(result)
10042	  6			  1			  i <= dfa->tindex
10258	  0			  0			  !kwset
10264	  0			  0			  (((&kwset->obstack))->chunk_limit - ((&kwset->obstack))->next_free < ((&kwset->obstack))->temp)
10264	  0			  0			  ((&kwset->obstack))->next_free == ((&kwset->obstack))->object_base
10264	  0			  0			  (((&kwset->obstack))->next_free - (char *)((&kwset->obstack))->chunk > ((&kwset->obstack))->chunk_limit - (char *)((&kwset->obstack))->chunk)
10265	  0			  0			  !kwset->trie
10308	  0			  0			  len--
10310	  0			  0			  kwset->trans
10320	  0			  0			  link && label != link->label
10323	  0			  0			  label < link->label
10332	  0			  0			  !link
10334	  0			  0			  (((&kwset->obstack))->chunk_limit - ((&kwset->obstack))->next_free < ((&kwset->obstack))->temp)
10334	  0			  0			  ((&kwset->obstack))->next_free == ((&kwset->obstack))->object_base
10334	  0			  0			  (((&kwset->obstack))->next_free - (char *)((&kwset->obstack))->chunk > ((&kwset->obstack))->chunk_limit - (char *)((&kwset->obstack))->chunk)
10336	  0			  0			  !link
10340	  0			  0			  (((&kwset->obstack))->chunk_limit - ((&kwset->obstack))->next_free < ((&kwset->obstack))->temp)
10340	  0			  0			  ((&kwset->obstack))->next_free == ((&kwset->obstack))->object_base
10340	  0			  0			  (((&kwset->obstack))->next_free - (char *)((&kwset->obstack))->chunk > ((&kwset->obstack))->chunk_limit - (char *)((&kwset->obstack))->chunk)
10342	  0			  0			  !link->trie
10355	  0			  0			  dirs[--depth] == L
10361	  0			  0			  depth && !links[depth]->balance
10363	  0			  0			  dirs[depth] == L
10371	  0			  0			  depth && ((dirs[depth] == L && --links[depth]->balance) || (dirs[depth] == R && ++links[depth]->balance))
10374	  0			  0			  "default"
10376	  0			  0			  (char)-2
10377	  0			  0			  "default"
10379	  0			  0			  L
10384	  0			  0			  R
10388	  0			  0			  t->balance != 1
10389	  0			  0			  t->balance != (char)-1
10394	  0			  0			  2
10395	  0			  0			  "default"
10397	  0			  0			  R
10402	  0			  0			  L
10406	  0			  0			  t->balance != 1
10407	  0			  0			  t->balance != (char)-1
10414	  0			  0			  dirs[depth - 1] == L
10426	  0			  0			  !trie->accepting
10431	  0			  0			  trie->depth < kwset->mind
10433	  0			  0			  trie->depth > kwset->maxd
10446	  0			  0			  !tree
10464	  0			  0			  !tree
10472	  0			  0			  fail
10475	  0			  0			  link && tree->label != link->label
10476	  0			  0			  tree->label < link->label
10480	  0			  0			  link
10499	  0			  0			  !tree
10503	  0			  0			  depth < delta[tree->label]
10513	  0			  0			  !b
10515	  0			  0			  !hasevery(a, b->llink)
10517	  0			  0			  !hasevery(a, b->rlink)
10519	  0			  0			  a && b->label != a->label
10520	  0			  0			  b->label < a->label
10534	  0			  0			  !tree
10559	  0			  0			  kwset->mind < 256
10560	  0			  0			  i < ((127 * 2U + 1U) + 1)
10563	  0			  0			  i < ((127 * 2U + 1U) + 1)
10568	  0			  0			  kwset->words == 1 && kwset->trans == 0
10571	  0			  0			  (((&kwset->obstack))->chunk_limit - ((&kwset->obstack))->next_free < ((&kwset->obstack))->temp)
10571	  0			  0			  ((&kwset->obstack))->next_free == ((&kwset->obstack))->object_base
10571	  0			  0			  (((&kwset->obstack))->next_free - (char *)((&kwset->obstack))->chunk > ((&kwset->obstack))->chunk_limit - (char *)((&kwset->obstack))->chunk)
10572	  0			  0			  i >= 0
10578	  0			  0			  i < kwset->mind
10583	  0			  0			  i < kwset->mind - 1
10584	  0			  0			  kwset->target[i] == kwset->target[kwset->mind - 1]
10591	  0			  0			  curr
10607	  0			  0			  fail
10612	  0			  0			  !hasevery(fail->links, curr->links)
10613	  0			  0			  curr->depth - fail->depth < fail->shift
10619	  0			  0			  curr->accepting && fail->maxshift > curr->depth - fail->depth
10626	  0			  0			  curr
10628	  0			  0			  curr->maxshift > curr->parent->maxshift
10630	  0			  0			  curr->shift > curr->maxshift
10636	  0			  0			  i < ((127 * 2U + 1U) + 1)
10640	  0			  0			  (trans = kwset->trans) != 0
10641	  0			  0			  i < ((127 * 2U + 1U) + 1)
10644	  0			  0			  i < ((127 * 2U + 1U) + 1)
10649	  0			  0			  (trans = kwset->trans) != 0
10650	  0			  0			  i < ((127 * 2U + 1U) + 1)
10653	  0			  0			  i < ((127 * 2U + 1U) + 1)
10676	  0			  0			  len == 0
10678	  0			  0			  len > size
10680	  0			  0			  len == 1
10690	  0			  0			  size > 12 * len
10692	  0			  0			  
10694	  0			  0			  tp <= ep
10698	  0			  0			  d == 0
10703	  0			  0			  d == 0
10708	  0			  0			  d == 0
10715	  0			  0			  ((unsigned char)(tp[-2])) == gc
10717	  0			  0			  i <= len && ((unsigned char)(tp[-i])) == ((unsigned char)(sp[-i]))
10719	  0			  0			  i > len
10729	  0			  0			  d <= ep - tp
10732	  0			  0			  d != 0
10734	  0			  0			  tp[-2] == gc
10736	  0			  0			  i <= len && ((unsigned char)(tp[-i])) == ((unsigned char)(sp[-i]))
10738	  0			  0			  i > len
10766	  0			  0			  len < kwset->mind
10773	  0			  0			  (d = kwset->mind) != 0
10781	  0			  0			  len >= 4 * kwset->mind
10786	  0			  0			  lim - end >= d
10788	  0			  0			  qlim && end <= qlim
10791	  0			  0			  (d = delta[c = *end]) && end < qlim
10801	  0			  0			  d
10805	  0			  0			  trie->accepting
10811	  0			  0			  beg > text
10813	  0			  0			  trans
10815	  0			  0			  tree && c != tree->label
10816	  0			  0			  c < tree->label
10820	  0			  0			  tree
10823	  0			  0			  trie->accepting
10833	  0			  0			  mch
10842	  0			  0			  lim - mch > kwset->maxd
10846	  0			  0			  lim - end >= d
10848	  0			  0			  (d = delta[c = (end += d)[-1]]) != 0
10851	  0			  0			  !(trie = next[c])
10856	  0			  0			  trie->accepting && beg <= mch
10862	  0			  0			  beg > text
10864	  0			  0			  trans
10866	  0			  0			  tree && c != tree->label
10867	  0			  0			  c < tree->label
10871	  0			  0			  tree
10874	  0			  0			  trie->accepting && beg <= mch
10884	  0			  0			  lmch
10889	  0			  0			  !d
10893	  0			  0			  kwsmatch
10913	  0			  0			  kwset->words == 1 && kwset->trans == 0
10916	  0			  0			  kwsmatch != 0 && ret != 0
10936	  0			  0			  ((&kwset->obstack)->temp > 0 && (&kwset->obstack)->temp < (&kwset->obstack)->chunk_limit - (char *)(&kwset->obstack)->chunk)
10990	  0			  0			  match_icase
10991	  0			  0			  i < ((127 * 2U + 1U) + 1)
10992	  0			  0			  (1 && ((*__ctype_b_loc())[(int)((i))] & (unsigned short)_ISupper))
10994	  0			  0			  !(kwset = kwsalloc(match_icase ? trans : (char *)0))
10994	  0			  0			  match_icase
11008	  0			  1			  dfa_1.musts
11014	  0			  0			  dm
11016	  0			  0			  !dm->exact
11019	  0			  0			  (err = kwsincr(kwset, dm->must, strlen(dm->must))) != 0
11024	  0			  0			  dm
11026	  0			  0			  dm->exact
11028	  0			  0			  (err = kwsincr(kwset, dm->must, strlen(dm->must))) != 0
11031	  0			  0			  (err = kwsprep(kwset)) != 0
11049	  0			  0			  (err = re_compile_pattern(pattern, size, &regex)) != 0
11058	  0			  0			  match_words || match_lines
11071	  0			  0			  match_lines
11073	  0			  0			  match_words
11080	  0			  0			  match_words
11082	  0			  0			  match_lines
11104	  1			  0			  strcmp(matcher, "posix-egrep") == 0
11115	  0			  1			  (err = re_compile_pattern(pattern, size, &regex)) != 0
11124	  0			  1			  match_words || match_lines
11137	  0			  0			  match_lines
11139	  0			  0			  match_words
11146	  0			  0			  match_words
11148	  0			  0			  match_lines
11174	  40			  0			  end < buflim
11176	  0			  40			  kwset
11180	  0			  0			  !beg
11185	  0			  0			  !end
11187	  0			  0			  beg > buf && beg[-1] != '\n'
11190	  0			  0			  kwsm.strchr < lastexact
11192	  0			  0			  !dfaexec(&dfa_1, beg, end, 0, (int *)0, &backref)
11199	  0			  0			  !backref
11208	  10			  30			  !beg
11212	  0			  30			  !end
11214	  955			  30			  beg > buf && beg[-1] != '\n'
11217	  30			  0			  !backref
11223	  0			  0			  (start = re_search(&regex, beg, end - beg, 0, end - beg, &regs)) >= 0
11226	  0			  0			  !match_lines && !match_words || match_lines && len == end - beg
11234	  0			  0			  match_words
11235	  0			  0			  start >= 0
11237	  0			  0			  (start == 0 || !((1 && ((*__ctype_b_loc())[(int)((beg[start - 1]))] & (unsigned short)_ISalnum)) || (beg[start - 1]) == '_')) && (len == end - beg || !((1 && ((*__ctype_b_loc())[(int)((beg[start + len]))] & (unsigned short)_ISalnum)) || (beg[start + len]) == '_'))
11240	  0			  0			  len > 0
11247	  0			  0			  len <= 0
11250	  0			  0			  start == end - beg
11266	  30			  0			  end < buflim
11279	  0			  0			  beg < pattern + size
11281	  0			  0			  lim < pattern + size && *lim != '\n'
11283	  0			  0			  (err = kwsincr(kwset, beg, lim - beg)) != 0
11285	  0			  0			  lim < pattern + size
11291	  0			  0			  (err = kwsprep(kwset)) != 0
11305	  0			  0			  beg <= buf + size
11307	  0			  0			  !(beg = kwsexec(kwset, beg, buf + size - beg, &kwsmatch))
11310	  0			  0			  match_lines
11312	  0			  0			  beg > buf && beg[-1] != '\n'
11314	  0			  0			  beg + len < buf + size && beg[len] != '\n'
11318	  0			  0			  match_words
11319	  0			  0			  len && try
11321	  0			  0			  try > buf && ((1 && ((*__ctype_b_loc())[(int)(((unsigned char)try[-1]))] & (unsigned short)_ISalnum)) || ((unsigned char)try[-1]) == '_')
11323	  0			  0			  try + len < buf + size && ((1 && ((*__ctype_b_loc())[(int)(((unsigned char)try[len]))] & (unsigned short)_ISalnum)) || ((unsigned char)try[len]) == '_')
11338	  0			  0			  (end = memchr(beg + len, '\n', (buf + size) - (beg + len))) != 0
11343	  0			  0			  beg > buf && beg[-1] != '\n'
Covered: 456 / Total: 3101 = 14.704934%
